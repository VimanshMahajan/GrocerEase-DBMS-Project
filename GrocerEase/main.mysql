DROP DATABASE IF EXISTS `GrocerEase`;

CREATE DATABASE GrocerEase;
USE GrocerEase;

DROP TABLE IF EXISTS `Customers`;
CREATE TABLE Customers(
	CustomerID INT AUTO_INCREMENT PRIMARY KEY,
    FirstName VARCHAR(50) NOT NULL,
    MiddleName VARCHAR(50),
    LastName VARCHAR(50),
    LoginID VARCHAR(50) NOT NULL,
    Customer_Password VARCHAR(50) NOT NULL,
    AddressLine1 VARCHAR(100) NOT NULL,
    AddressLine2 VARCHAR(100) NOT NULL,
    City VARCHAR(50) NOT NULL,
    State VARCHAR(50) NOT NULL,
    Country VARCHAR(50) NOT NULL,
    pin_code VARCHAR(6) NOT NULL,
    CONSTRAINT pin_code_length CHECK (LENGTH(pin_code) = 6 AND pin_code REGEXP '^[0-9]+$'),
    Age INT NOT NULL CHECK (Age > 0),
    PhoneNumber BIGINT NOT NULL CHECK (PhoneNumber >= 0 AND PhoneNumber < 10000000000));

DROP TABLE IF EXISTS `Offline_Stores`;

CREATE TABLE Offline_Stores (
    storeID INT PRIMARY KEY NOT NULL,
    AddressLine1 VARCHAR(100) NOT NULL,
    AddressLine2 VARCHAR(100) NOT NULL,
    city VARCHAR(50) NOT NULL,
    state VARCHAR(50) NOT NULL,
    country VARCHAR(50) NOT NULL,
    zip_code VARCHAR(6) NOT NULL,
    CONSTRAINT zip_code_length CHECK (LENGTH(zip_code) = 6 AND zip_code REGEXP '^[0-9]+$')
);

DROP TABLE IF EXISTS `DeliveryAgent`;
CREATE TABLE DeliveryAgent(
	AgentID INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    AgentName VARCHAR(100) NOT NULL,
    PhoneNumber BIGINT NOT NULL CHECK (PhoneNumber >= 0 AND PhoneNumber < 10000000000),
    StoreID INT NOT NULL,
    FOREIGN KEY (StoreID) REFERENCES Offline_Stores(StoreID));

DROP TABLE IF EXISTS `Wallet`;
CREATE TABLE Wallet(
	CustomerID INT NOT NULL,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    Balance FLOAT CHECK (Balance >= 0),
    UPI_ID VARCHAR(20) NOT NULL
);

DROP TABLE IF EXISTS `Admin`;

CREATE TABLE Admin (
    AdminID INT PRIMARY KEY NOT NULL,
    admin_pwd VARCHAR(10) NOT NULL
);

DROP TABLE IF EXISTS `Inventory`;

CREATE TABLE Inventory (
    itemID INT NOT NULL,
    storeID INT NOT NULL,
    ItemName VARCHAR(20) NOT NULL,
    PRIMARY KEY (itemID, StoreID),
    FOREIGN KEY (storeID) REFERENCES Offline_Stores(storeID),
    price INT NOT NULL,
    stock INT NOT NULL,
    category VARCHAR(50) NOT NULL,
    itemDescription VARCHAR(100) NOT NULL
);

DROP TABLE IF EXISTS Supplier;
CREATE TABLE Supplier (
    Supplier_ID INT PRIMARY KEY,
    Name VARCHAR(50) NOT NULL,
    AddressLine1 VARCHAR(100) NOT NULL,
    AddressLine2 VARCHAR(100) NOT NULL,
    City VARCHAR(100) NOT NULL,
    State VARCHAR(100) NOT NULL,
    Country VARCHAR(100) NOT NULL,
    PIN_code CHAR(6) NOT NULL
);

drop table if exists Cart;
create table Cart(
    Cart_ID INT primary key,
    Customer_ID Int not null,
    FOREIGN KEY (Customer_ID) references Customers(CustomerID),
    Item_ID INT,
    Quantity INT
);

DROP TABLE IF EXISTS `Orders`;

CREATE TABLE Orders(
    OrderID INT PRIMARY KEY NOT NULL,
    CustomerID INT NOT NULL,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    OrderStatus VARCHAR(20) NOT NULL
);

CREATE TABLE Reviews (
    OrderID INT,
    stars INT,
    description VARCHAR(255),
    PRIMARY KEY (OrderID),
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
);